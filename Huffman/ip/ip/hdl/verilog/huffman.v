// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="huffman,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.484500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=199,HLS_SYN_DSP=0,HLS_SYN_FF=1403,HLS_SYN_LUT=2533}" *)

module huffman (
        ap_clk,
        ap_rst_n,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_st1_fsm_0 = 14'b1;
parameter    ap_ST_st2_fsm_1 = 14'b10;
parameter    ap_ST_st3_fsm_2 = 14'b100;
parameter    ap_ST_st4_fsm_3 = 14'b1000;
parameter    ap_ST_st5_fsm_4 = 14'b10000;
parameter    ap_ST_st6_fsm_5 = 14'b100000;
parameter    ap_ST_st7_fsm_6 = 14'b1000000;
parameter    ap_ST_st8_fsm_7 = 14'b10000000;
parameter    ap_ST_st9_fsm_8 = 14'b100000000;
parameter    ap_ST_st10_fsm_9 = 14'b1000000000;
parameter    ap_ST_st11_fsm_10 = 14'b10000000000;
parameter    ap_ST_st12_fsm_11 = 14'b100000000000;
parameter    ap_ST_st13_fsm_12 = 14'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 14'b10000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 20;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv18_0 = 18'b000000000000000000;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv16_FFFF = 16'b1111111111111111;
parameter    ap_const_lv9_1FF = 9'b111111111;
parameter    ap_const_lv18_249F0 = 18'b100100100111110000;
parameter    ap_const_lv18_1 = 18'b1;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv10_200 = 10'b1000000000;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv32_FFFFFFFE = 32'b11111111111111111111111111111110;
parameter    ap_const_lv9_8 = 9'b1000;
parameter    ap_const_lv8_8 = 8'b1000;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv32_1FF = 32'b111111111;
parameter    ap_const_lv32_1F = 32'b11111;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_31;
reg    ap_ready;
wire   [7:0] code_lengths_q0;
reg   [16:0] compressed_address0;
reg    compressed_ce0;
wire   [7:0] compressed_q0;
reg   [17:0] decompressed_address0;
reg    decompressed_ce0;
reg    decompressed_we0;
reg   [7:0] decompressed_d0;
wire   [31:0] c_size;
reg    d_size_ap_vld;
reg   [8:0] CodeTable_address0;
reg    CodeTable_ce0;
reg    CodeTable_we0;
wire   [31:0] CodeTable_d0;
wire   [31:0] CodeTable_q0;
reg   [31:0] c_size_read_reg_728;
wire   [0:0] exitcond3_fu_400_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_117;
wire   [17:0] i_1_fu_406_p2;
wire   [0:0] exitcond24_i_fu_417_p2;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_128;
wire   [8:0] i_2_fu_423_p2;
wire   [9:0] i_3_fu_441_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_139;
wire   [9:0] i_4_fu_458_p2;
reg   [9:0] i_4_reg_763;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_148;
wire   [63:0] tmp_i_fu_464_p1;
reg   [63:0] tmp_i_reg_768;
wire   [0:0] exitcond_i1_fu_452_p2;
wire   [31:0] tmp_6_fu_469_p2;
reg   [31:0] tmp_6_reg_800;
reg   [16:0] compressed_addr_1_reg_805;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_171;
wire   [0:0] tmp_7_fu_499_p2;
wire   [0:0] tmp_3_fu_515_p2;
reg   [0:0] tmp_3_reg_818;
wire   [31:0] in_index_1_fu_526_p3;
reg   [31:0] in_index_1_reg_825;
reg   [7:0] compressed_load_reg_830;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_187;
wire   [31:0] loop_limit_1_fu_583_p3;
reg   [31:0] loop_limit_1_reg_835;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_196;
wire   [31:0] bits_1_fu_590_p2;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_207;
wire   [31:0] i_6_fu_609_p2;
reg   [31:0] i_6_reg_854;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_216;
wire   [0:0] tmp_10_fu_615_p2;
reg   [0:0] tmp_10_reg_860;
reg   [31:0] accumulator_load_1_reg_864;
wire   [31:0] code_1_fu_645_p2;
reg   [31:0] code_1_reg_869;
reg   [7:0] tree_HuffmanCodes_V_address0;
reg    tree_HuffmanCodes_V_ce0;
reg    tree_HuffmanCodes_V_we0;
reg   [15:0] tree_HuffmanCodes_V_d0;
wire   [15:0] tree_HuffmanCodes_V_q0;
reg   [7:0] tree_CodeLengths_V_address0;
reg    tree_CodeLengths_V_ce0;
reg    tree_CodeLengths_V_we0;
reg   [7:0] tree_CodeLengths_V_d0;
reg   [8:0] tree_CodeTable_address0;
reg    tree_CodeTable_ce0;
reg    tree_CodeTable_we0;
reg   [8:0] tree_CodeTable_d0;
wire   [8:0] tree_CodeTable_q0;
wire    grp_huffman_DecodeCodebook_fu_384_ap_start;
wire    grp_huffman_DecodeCodebook_fu_384_ap_done;
wire    grp_huffman_DecodeCodebook_fu_384_ap_idle;
wire    grp_huffman_DecodeCodebook_fu_384_ap_ready;
wire   [7:0] grp_huffman_DecodeCodebook_fu_384_HuffmanTree_HuffmanCodes_V_address0;
wire    grp_huffman_DecodeCodebook_fu_384_HuffmanTree_HuffmanCodes_V_ce0;
wire    grp_huffman_DecodeCodebook_fu_384_HuffmanTree_HuffmanCodes_V_we0;
wire   [15:0] grp_huffman_DecodeCodebook_fu_384_HuffmanTree_HuffmanCodes_V_d0;
wire   [7:0] grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeLengths_V_address0;
wire    grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeLengths_V_ce0;
wire    grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeLengths_V_we0;
wire   [7:0] grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeLengths_V_d0;
wire   [8:0] grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeTable_address0;
wire    grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeTable_ce0;
wire    grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeTable_we0;
wire   [8:0] grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeTable_d0;
wire   [7:0] grp_huffman_DecodeCodebook_fu_384_code_lengths_address0;
wire    grp_huffman_DecodeCodebook_fu_384_code_lengths_ce0;
wire    grp_huffman_DecodeCodebook_fu_384_code_lengths_we0;
wire   [7:0] grp_huffman_DecodeCodebook_fu_384_code_lengths_d0;
reg   [17:0] i_reg_250;
reg   [8:0] i_0_i_reg_261;
reg   [9:0] i2_0_i_reg_272;
wire   [0:0] exitcond_i_fu_435_p2;
reg   [9:0] i_i_reg_283;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_309;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_319;
reg   [31:0] bits_reg_294;
wire   [0:0] tmp_9_fu_604_p2;
reg   [31:0] in_index_reg_306;
reg   [31:0] loop_limit_reg_317;
reg   [31:0] bits_2_reg_329;
reg   [31:0] bits_2_be_phi_fu_365_p4;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_339;
wire   [0:0] tmp_22_fu_668_p2;
reg   [31:0] code_2_reg_340;
reg   [31:0] i2_0_in_reg_350;
reg   [31:0] bits_2_be_reg_361;
reg   [31:0] code_1_be_phi_fu_376_p4;
reg   [31:0] code_1_be_reg_373;
reg    ap_reg_grp_huffman_DecodeCodebook_fu_384_ap_start;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_368;
wire   [63:0] tmp_fu_412_p1;
wire   [63:0] tmp_2_fu_429_p1;
wire   [63:0] tmp_4_fu_447_p1;
wire  signed [63:0] tmp_5_fu_474_p1;
wire  signed [63:0] tmp_s_fu_510_p1;
wire  signed [63:0] tmp_15_fu_651_p1;
wire  signed [63:0] tmp_19_fu_691_p1;
reg   [31:0] accumulator_fu_122;
wire   [31:0] accumulator_1_fu_565_p3;
wire   [31:0] accumulator_5_fu_707_p2;
reg   [31:0] code_fu_126;
reg   [31:0] out_index_fu_130;
wire   [31:0] out_index_1_fu_685_p2;
wire   [7:0] tmp_23_fu_680_p1;
wire   [31:0] in_index_2_fu_504_p2;
wire   [31:0] in_index_3_fu_520_p2;
wire   [23:0] tmp_16_fu_534_p1;
wire   [8:0] num_cast_fu_545_p1;
wire   [8:0] tmp_8_fu_549_p2;
wire   [31:0] accumulator_2_fu_538_p3;
wire  signed [31:0] tmp_8_cast_fu_555_p1;
wire   [31:0] accumulator_3_fu_559_p2;
wire   [7:0] p_pn_fu_572_p3;
wire   [31:0] p_pn_cast_fu_579_p1;
wire   [31:0] tmp_12_fu_627_p2;
wire   [31:0] tmp_13_fu_633_p2;
wire   [31:0] tmp_14_fu_639_p2;
wire   [31:0] tmp_17_fu_621_p2;
wire   [0:0] tmp_21_fu_662_p2;
wire   [0:0] tmp_18_fu_656_p2;
wire   [31:0] i2_0_neg_le_fu_674_p2;
wire   [31:0] tmp_20_fu_696_p2;
wire   [31:0] accumulator_4_fu_702_p2;
reg   [13:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'b1;
#0 ap_reg_grp_huffman_DecodeCodebook_fu_384_ap_start = 1'b0;
end

huffman_CodeTable #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
CodeTable_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(CodeTable_address0),
    .ce0(CodeTable_ce0),
    .we0(CodeTable_we0),
    .d0(CodeTable_d0),
    .q0(CodeTable_q0)
);

huffman_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
huffman_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .code_lengths_address0(grp_huffman_DecodeCodebook_fu_384_code_lengths_address0),
    .code_lengths_ce0(grp_huffman_DecodeCodebook_fu_384_code_lengths_ce0),
    .code_lengths_we0(grp_huffman_DecodeCodebook_fu_384_code_lengths_we0),
    .code_lengths_d0(grp_huffman_DecodeCodebook_fu_384_code_lengths_d0),
    .code_lengths_q0(code_lengths_q0),
    .compressed_address0(compressed_address0),
    .compressed_ce0(compressed_ce0),
    .compressed_q0(compressed_q0),
    .decompressed_address0(decompressed_address0),
    .decompressed_ce0(decompressed_ce0),
    .decompressed_we0(decompressed_we0),
    .decompressed_d0(decompressed_d0),
    .c_size(c_size),
    .d_size(out_index_fu_130),
    .d_size_ap_vld(d_size_ap_vld)
);

huffman_tree_HuffmanCodes_V #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
tree_HuffmanCodes_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(tree_HuffmanCodes_V_address0),
    .ce0(tree_HuffmanCodes_V_ce0),
    .we0(tree_HuffmanCodes_V_we0),
    .d0(tree_HuffmanCodes_V_d0),
    .q0(tree_HuffmanCodes_V_q0)
);

huffman_tree_CodeLengths_V #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
tree_CodeLengths_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(tree_CodeLengths_V_address0),
    .ce0(tree_CodeLengths_V_ce0),
    .we0(tree_CodeLengths_V_we0),
    .d0(tree_CodeLengths_V_d0)
);

huffman_tree_CodeTable #(
    .DataWidth( 9 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
tree_CodeTable_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(tree_CodeTable_address0),
    .ce0(tree_CodeTable_ce0),
    .we0(tree_CodeTable_we0),
    .d0(tree_CodeTable_d0),
    .q0(tree_CodeTable_q0)
);

huffman_DecodeCodebook grp_huffman_DecodeCodebook_fu_384(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_huffman_DecodeCodebook_fu_384_ap_start),
    .ap_done(grp_huffman_DecodeCodebook_fu_384_ap_done),
    .ap_idle(grp_huffman_DecodeCodebook_fu_384_ap_idle),
    .ap_ready(grp_huffman_DecodeCodebook_fu_384_ap_ready),
    .HuffmanTree_HuffmanCodes_V_address0(grp_huffman_DecodeCodebook_fu_384_HuffmanTree_HuffmanCodes_V_address0),
    .HuffmanTree_HuffmanCodes_V_ce0(grp_huffman_DecodeCodebook_fu_384_HuffmanTree_HuffmanCodes_V_ce0),
    .HuffmanTree_HuffmanCodes_V_we0(grp_huffman_DecodeCodebook_fu_384_HuffmanTree_HuffmanCodes_V_we0),
    .HuffmanTree_HuffmanCodes_V_d0(grp_huffman_DecodeCodebook_fu_384_HuffmanTree_HuffmanCodes_V_d0),
    .HuffmanTree_HuffmanCodes_V_q0(tree_HuffmanCodes_V_q0),
    .HuffmanTree_CodeLengths_V_address0(grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeLengths_V_address0),
    .HuffmanTree_CodeLengths_V_ce0(grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeLengths_V_ce0),
    .HuffmanTree_CodeLengths_V_we0(grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeLengths_V_we0),
    .HuffmanTree_CodeLengths_V_d0(grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeLengths_V_d0),
    .HuffmanTree_CodeTable_address0(grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeTable_address0),
    .HuffmanTree_CodeTable_ce0(grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeTable_ce0),
    .HuffmanTree_CodeTable_we0(grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeTable_we0),
    .HuffmanTree_CodeTable_d0(grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeTable_d0),
    .code_lengths_address0(grp_huffman_DecodeCodebook_fu_384_code_lengths_address0),
    .code_lengths_ce0(grp_huffman_DecodeCodebook_fu_384_code_lengths_ce0),
    .code_lengths_we0(grp_huffman_DecodeCodebook_fu_384_code_lengths_we0),
    .code_lengths_d0(grp_huffman_DecodeCodebook_fu_384_code_lengths_d0),
    .code_lengths_q0(code_lengths_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_huffman_DecodeCodebook_fu_384_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
            ap_reg_grp_huffman_DecodeCodebook_fu_384_ap_start <= 1'b1;
        end else if ((1'b1 == grp_huffman_DecodeCodebook_fu_384_ap_ready)) begin
            ap_reg_grp_huffman_DecodeCodebook_fu_384_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & (1'b0 == tmp_22_fu_668_p2) & ~(1'b0 == tmp_10_reg_860))) begin
        accumulator_fu_122 <= accumulator_5_fu_707_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        accumulator_fu_122 <= accumulator_1_fu_565_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(exitcond_i1_fu_452_p2 == 1'b0))) begin
        accumulator_fu_122 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & (1'b0 == tmp_10_fu_615_p2))) begin
        bits_2_be_reg_361 <= bits_2_reg_329;
    end else if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & (1'b0 == tmp_22_fu_668_p2) & ~(1'b0 == tmp_10_reg_860))) begin
        bits_2_be_reg_361 <= i_6_reg_854;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & ((1'b0 == tmp_10_reg_860) | (1'b0 == tmp_22_fu_668_p2)))) begin
        bits_2_reg_329 <= bits_2_be_phi_fu_365_p4;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        bits_2_reg_329 <= bits_1_fu_590_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(1'b0 == tmp_9_fu_604_p2))) begin
        bits_reg_294 <= bits_2_reg_329;
    end else if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(exitcond_i1_fu_452_p2 == 1'b0))) begin
        bits_reg_294 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & (1'b0 == tmp_10_fu_615_p2))) begin
        code_1_be_reg_373 <= code_2_reg_340;
    end else if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & (1'b0 == tmp_22_fu_668_p2) & ~(1'b0 == tmp_10_reg_860))) begin
        code_1_be_reg_373 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & (1'b0 == tmp_9_fu_604_p2))) begin
        code_2_reg_340 <= code_fu_126;
    end else if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & ~(1'b0 == tmp_10_reg_860) & ~(1'b0 == tmp_22_fu_668_p2))) begin
        code_2_reg_340 <= code_1_reg_869;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & ((1'b0 == tmp_10_reg_860) | (1'b0 == tmp_22_fu_668_p2)))) begin
        code_fu_126 <= code_1_be_phi_fu_376_p4;
    end else if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(exitcond_i1_fu_452_p2 == 1'b0))) begin
        code_fu_126 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(exitcond24_i_fu_417_p2 == 1'b0))) begin
        i2_0_i_reg_272 <= ap_const_lv10_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond_i_fu_435_p2))) begin
        i2_0_i_reg_272 <= i_3_fu_441_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & (1'b0 == tmp_9_fu_604_p2))) begin
        i2_0_in_reg_350 <= bits_2_reg_329;
    end else if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & ~(1'b0 == tmp_10_reg_860) & ~(1'b0 == tmp_22_fu_668_p2))) begin
        i2_0_in_reg_350 <= i_6_reg_854;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond3_fu_400_p2 == 1'b0))) begin
        i_0_i_reg_261 <= ap_const_lv9_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond24_i_fu_417_p2 == 1'b0))) begin
        i_0_i_reg_261 <= i_2_fu_423_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        i_i_reg_283 <= i_4_reg_763;
    end else if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == grp_huffman_DecodeCodebook_fu_384_ap_done))) begin
        i_i_reg_283 <= ap_const_lv10_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond3_fu_400_p2 == 1'b0))) begin
        i_reg_250 <= i_1_fu_406_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        i_reg_250 <= ap_const_lv18_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(1'b0 == tmp_9_fu_604_p2))) begin
        in_index_reg_306 <= in_index_1_reg_825;
    end else if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(exitcond_i1_fu_452_p2 == 1'b0))) begin
        in_index_reg_306 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(1'b0 == tmp_9_fu_604_p2))) begin
        loop_limit_reg_317 <= loop_limit_1_reg_835;
    end else if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(exitcond_i1_fu_452_p2 == 1'b0))) begin
        loop_limit_reg_317 <= ap_const_lv32_9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & (1'b0 == tmp_22_fu_668_p2) & ~(1'b0 == tmp_10_reg_860))) begin
        out_index_fu_130 <= out_index_1_fu_685_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(exitcond_i1_fu_452_p2 == 1'b0))) begin
        out_index_fu_130 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == tmp_10_fu_615_p2))) begin
        accumulator_load_1_reg_864 <= accumulator_fu_122;
        code_1_reg_869 <= code_1_fu_645_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        c_size_read_reg_728 <= c_size;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(exitcond_i1_fu_452_p2 == 1'b0))) begin
        compressed_addr_1_reg_805 <= tmp_5_fu_474_p1;
        tmp_6_reg_800 <= tmp_6_fu_469_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        compressed_load_reg_830 <= compressed_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        i_4_reg_763 <= i_4_fu_458_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        i_6_reg_854 <= i_6_fu_609_p2;
        tmp_10_reg_860 <= tmp_10_fu_615_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(1'b0 == tmp_7_fu_499_p2))) begin
        in_index_1_reg_825 <= in_index_1_fu_526_p3;
        tmp_3_reg_818 <= tmp_3_fu_515_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        loop_limit_1_reg_835 <= loop_limit_1_fu_583_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & (exitcond_i1_fu_452_p2 == 1'b0))) begin
        tmp_i_reg_768[9 : 0] <= tmp_i_fu_464_p1[9 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        CodeTable_address0 = tmp_i_reg_768;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        CodeTable_address0 = tmp_15_fu_651_p1;
    end else begin
        CodeTable_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        CodeTable_ce0 = 1'b1;
    end else begin
        CodeTable_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        CodeTable_we0 = 1'b1;
    end else begin
        CodeTable_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & (1'b0 == tmp_7_fu_499_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & (1'b0 == tmp_7_fu_499_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_187) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_196) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_207) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_216) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_339) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_31) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_117) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_128) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_139) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_368) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_309) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_148) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_319) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_171) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & (1'b0 == tmp_22_fu_668_p2) & ~(1'b0 == tmp_10_reg_860))) begin
        bits_2_be_phi_fu_365_p4 = i_6_reg_854;
    end else begin
        bits_2_be_phi_fu_365_p4 = bits_2_be_reg_361;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & (1'b0 == tmp_22_fu_668_p2) & ~(1'b0 == tmp_10_reg_860))) begin
        code_1_be_phi_fu_376_p4 = ap_const_lv32_0;
    end else begin
        code_1_be_phi_fu_376_p4 = code_1_be_reg_373;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        compressed_address0 = compressed_addr_1_reg_805;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        compressed_address0 = tmp_s_fu_510_p1;
    end else begin
        compressed_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9))) begin
        compressed_ce0 = 1'b1;
    end else begin
        compressed_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & (1'b0 == tmp_7_fu_499_p2))) begin
        d_size_ap_vld = 1'b1;
    end else begin
        d_size_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        decompressed_address0 = tmp_19_fu_691_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        decompressed_address0 = tmp_fu_412_p1;
    end else begin
        decompressed_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13))) begin
        decompressed_ce0 = 1'b1;
    end else begin
        decompressed_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        decompressed_d0 = tmp_23_fu_680_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        decompressed_d0 = ap_const_lv8_0;
    end else begin
        decompressed_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond3_fu_400_p2 == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & (1'b0 == tmp_22_fu_668_p2) & ~(1'b0 == tmp_10_reg_860)))) begin
        decompressed_we0 = 1'b1;
    end else begin
        decompressed_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        tree_CodeLengths_V_address0 = tmp_2_fu_429_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tree_CodeLengths_V_address0 = grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeLengths_V_address0;
    end else begin
        tree_CodeLengths_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        tree_CodeLengths_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tree_CodeLengths_V_ce0 = grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeLengths_V_ce0;
    end else begin
        tree_CodeLengths_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        tree_CodeLengths_V_d0 = ap_const_lv8_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tree_CodeLengths_V_d0 = grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeLengths_V_d0;
    end else begin
        tree_CodeLengths_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond24_i_fu_417_p2 == 1'b0))) begin
        tree_CodeLengths_V_we0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tree_CodeLengths_V_we0 = grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeLengths_V_we0;
    end else begin
        tree_CodeLengths_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        tree_CodeTable_address0 = tmp_4_fu_447_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        tree_CodeTable_address0 = tmp_i_fu_464_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tree_CodeTable_address0 = grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeTable_address0;
    end else begin
        tree_CodeTable_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        tree_CodeTable_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tree_CodeTable_ce0 = grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeTable_ce0;
    end else begin
        tree_CodeTable_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        tree_CodeTable_d0 = ap_const_lv9_1FF;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tree_CodeTable_d0 = grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeTable_d0;
    end else begin
        tree_CodeTable_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond_i_fu_435_p2))) begin
        tree_CodeTable_we0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tree_CodeTable_we0 = grp_huffman_DecodeCodebook_fu_384_HuffmanTree_CodeTable_we0;
    end else begin
        tree_CodeTable_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        tree_HuffmanCodes_V_address0 = tmp_2_fu_429_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tree_HuffmanCodes_V_address0 = grp_huffman_DecodeCodebook_fu_384_HuffmanTree_HuffmanCodes_V_address0;
    end else begin
        tree_HuffmanCodes_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        tree_HuffmanCodes_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tree_HuffmanCodes_V_ce0 = grp_huffman_DecodeCodebook_fu_384_HuffmanTree_HuffmanCodes_V_ce0;
    end else begin
        tree_HuffmanCodes_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        tree_HuffmanCodes_V_d0 = ap_const_lv16_FFFF;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tree_HuffmanCodes_V_d0 = grp_huffman_DecodeCodebook_fu_384_HuffmanTree_HuffmanCodes_V_d0;
    end else begin
        tree_HuffmanCodes_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond24_i_fu_417_p2 == 1'b0))) begin
        tree_HuffmanCodes_V_we0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tree_HuffmanCodes_V_we0 = grp_huffman_DecodeCodebook_fu_384_HuffmanTree_HuffmanCodes_V_we0;
    end else begin
        tree_HuffmanCodes_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if ((exitcond3_fu_400_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if ((exitcond24_i_fu_417_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if ((1'b0 == exitcond_i_fu_435_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            if (~(1'b0 == grp_huffman_DecodeCodebook_fu_384_ap_done)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st7_fsm_6 : begin
            if (~(exitcond_i1_fu_452_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st9_fsm_8 : begin
            if ((1'b0 == tmp_7_fu_499_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            if ((1'b0 == tmp_9_fu_604_p2)) begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            if (((1'b0 == tmp_10_reg_860) | (1'b0 == tmp_22_fu_668_p2))) begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign CodeTable_d0 = tree_CodeTable_q0;

assign accumulator_1_fu_565_p3 = ((tmp_3_reg_818[0:0] === 1'b1) ? accumulator_3_fu_559_p2 : accumulator_2_fu_538_p3);

assign accumulator_2_fu_538_p3 = {{tmp_16_fu_534_p1}, {compressed_load_reg_830}};

assign accumulator_3_fu_559_p2 = $signed(accumulator_2_fu_538_p3) >>> tmp_8_cast_fu_555_p1;

assign accumulator_4_fu_702_p2 = accumulator_load_1_reg_864 << tmp_20_fu_696_p2;

assign accumulator_5_fu_707_p2 = $signed(accumulator_4_fu_702_p2) >>> tmp_20_fu_696_p2;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

always @ (*) begin
    ap_sig_117 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_128 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_139 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_148 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_171 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_187 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_196 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_207 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_216 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_309 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_31 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_319 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_339 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_368 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

assign bits_1_fu_590_p2 = (bits_reg_294 + p_pn_cast_fu_579_p1);

assign code_1_fu_645_p2 = (tmp_14_fu_639_p2 | tmp_17_fu_621_p2);

assign exitcond24_i_fu_417_p2 = ((i_0_i_reg_261 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign exitcond3_fu_400_p2 = ((i_reg_250 == ap_const_lv18_249F0) ? 1'b1 : 1'b0);

assign exitcond_i1_fu_452_p2 = ((i_i_reg_283 == ap_const_lv10_200) ? 1'b1 : 1'b0);

assign exitcond_i_fu_435_p2 = ((i2_0_i_reg_272 == ap_const_lv10_200) ? 1'b1 : 1'b0);

assign grp_huffman_DecodeCodebook_fu_384_ap_start = ap_reg_grp_huffman_DecodeCodebook_fu_384_ap_start;

assign i2_0_neg_le_fu_674_p2 = (ap_const_lv32_1 - i2_0_in_reg_350);

assign i_1_fu_406_p2 = (i_reg_250 + ap_const_lv18_1);

assign i_2_fu_423_p2 = (i_0_i_reg_261 + ap_const_lv9_1);

assign i_3_fu_441_p2 = (i2_0_i_reg_272 + ap_const_lv10_1);

assign i_4_fu_458_p2 = (i_i_reg_283 + ap_const_lv10_1);

assign i_6_fu_609_p2 = ($signed(i2_0_in_reg_350) + $signed(ap_const_lv32_FFFFFFFF));

assign in_index_1_fu_526_p3 = ((tmp_3_fu_515_p2[0:0] === 1'b1) ? in_index_3_fu_520_p2 : in_index_2_fu_504_p2);

assign in_index_2_fu_504_p2 = (ap_const_lv32_1 + in_index_reg_306);

assign in_index_3_fu_520_p2 = (ap_const_lv32_3 + in_index_reg_306);

assign loop_limit_1_fu_583_p3 = ((tmp_3_reg_818[0:0] === 1'b1) ? ap_const_lv32_1 : loop_limit_reg_317);

assign num_cast_fu_545_p1 = compressed_q0;

assign out_index_1_fu_685_p2 = (ap_const_lv32_1 + out_index_fu_130);

assign p_pn_cast_fu_579_p1 = p_pn_fu_572_p3;

assign p_pn_fu_572_p3 = ((tmp_3_reg_818[0:0] === 1'b1) ? compressed_q0 : ap_const_lv8_8);

assign tmp_10_fu_615_p2 = (($signed(i2_0_in_reg_350) > $signed(32'b00000000000000000000000000000000)) ? 1'b1 : 1'b0);

assign tmp_12_fu_627_p2 = ap_const_lv32_1 << i_6_fu_609_p2;

assign tmp_13_fu_633_p2 = (tmp_12_fu_627_p2 & accumulator_fu_122);

assign tmp_14_fu_639_p2 = $signed(tmp_13_fu_633_p2) >>> i_6_fu_609_p2;

assign tmp_15_fu_651_p1 = $signed(code_1_fu_645_p2);

assign tmp_16_fu_534_p1 = accumulator_fu_122[23:0];

assign tmp_17_fu_621_p2 = code_2_reg_340 << ap_const_lv32_1;

assign tmp_18_fu_656_p2 = ((CodeTable_q0 == ap_const_lv32_FFFFFFFF) ? 1'b1 : 1'b0);

assign tmp_19_fu_691_p1 = $signed(out_index_fu_130);

assign tmp_20_fu_696_p2 = (ap_const_lv32_1F + i2_0_neg_le_fu_674_p2);

assign tmp_21_fu_662_p2 = ((CodeTable_q0 == ap_const_lv32_1FF) ? 1'b1 : 1'b0);

assign tmp_22_fu_668_p2 = (tmp_21_fu_662_p2 | tmp_18_fu_656_p2);

assign tmp_23_fu_680_p1 = CodeTable_q0[7:0];

assign tmp_2_fu_429_p1 = i_0_i_reg_261;

assign tmp_3_fu_515_p2 = ((in_index_2_fu_504_p2 == tmp_6_reg_800) ? 1'b1 : 1'b0);

assign tmp_4_fu_447_p1 = i2_0_i_reg_272;

assign tmp_5_fu_474_p1 = $signed(tmp_6_fu_469_p2);

assign tmp_6_fu_469_p2 = ($signed(c_size_read_reg_728) + $signed(ap_const_lv32_FFFFFFFE));

assign tmp_7_fu_499_p2 = (($signed(in_index_reg_306) < $signed(c_size_read_reg_728)) ? 1'b1 : 1'b0);

assign tmp_8_cast_fu_555_p1 = $signed(tmp_8_fu_549_p2);

assign tmp_8_fu_549_p2 = (ap_const_lv9_8 - num_cast_fu_545_p1);

assign tmp_9_fu_604_p2 = (($signed(bits_2_reg_329) < $signed(loop_limit_1_reg_835)) ? 1'b1 : 1'b0);

assign tmp_fu_412_p1 = i_reg_250;

assign tmp_i_fu_464_p1 = i_i_reg_283;

assign tmp_s_fu_510_p1 = $signed(in_index_reg_306);

always @ (posedge ap_clk) begin
    tmp_i_reg_768[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //huffman
