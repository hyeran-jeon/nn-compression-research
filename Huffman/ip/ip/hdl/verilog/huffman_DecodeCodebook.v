// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module huffman_DecodeCodebook (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        HuffmanTree_HuffmanCodes_V_address0,
        HuffmanTree_HuffmanCodes_V_ce0,
        HuffmanTree_HuffmanCodes_V_we0,
        HuffmanTree_HuffmanCodes_V_d0,
        HuffmanTree_HuffmanCodes_V_q0,
        HuffmanTree_CodeLengths_V_address0,
        HuffmanTree_CodeLengths_V_ce0,
        HuffmanTree_CodeLengths_V_we0,
        HuffmanTree_CodeLengths_V_d0,
        HuffmanTree_CodeTable_address0,
        HuffmanTree_CodeTable_ce0,
        HuffmanTree_CodeTable_we0,
        HuffmanTree_CodeTable_d0,
        code_lengths_address0,
        code_lengths_ce0,
        code_lengths_we0,
        code_lengths_d0,
        code_lengths_q0
);

parameter    ap_ST_st1_fsm_0 = 15'b1;
parameter    ap_ST_st2_fsm_1 = 15'b10;
parameter    ap_ST_st3_fsm_2 = 15'b100;
parameter    ap_ST_st4_fsm_3 = 15'b1000;
parameter    ap_ST_st5_fsm_4 = 15'b10000;
parameter    ap_ST_st6_fsm_5 = 15'b100000;
parameter    ap_ST_st7_fsm_6 = 15'b1000000;
parameter    ap_ST_pp1_stg0_fsm_7 = 15'b10000000;
parameter    ap_ST_st10_fsm_8 = 15'b100000000;
parameter    ap_ST_st11_fsm_9 = 15'b1000000000;
parameter    ap_ST_st12_fsm_10 = 15'b10000000000;
parameter    ap_ST_pp3_stg0_fsm_11 = 15'b100000000000;
parameter    ap_ST_pp3_stg1_fsm_12 = 15'b1000000000000;
parameter    ap_ST_pp4_stg0_fsm_13 = 15'b10000000000000;
parameter    ap_ST_st18_fsm_14 = 15'b100000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1FF = 9'b111111111;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv24_1 = 24'b1;
parameter    ap_const_lv32_E = 32'b1110;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] HuffmanTree_HuffmanCodes_V_address0;
output   HuffmanTree_HuffmanCodes_V_ce0;
output   HuffmanTree_HuffmanCodes_V_we0;
output  [15:0] HuffmanTree_HuffmanCodes_V_d0;
input  [15:0] HuffmanTree_HuffmanCodes_V_q0;
output  [7:0] HuffmanTree_CodeLengths_V_address0;
output   HuffmanTree_CodeLengths_V_ce0;
output   HuffmanTree_CodeLengths_V_we0;
output  [7:0] HuffmanTree_CodeLengths_V_d0;
output  [8:0] HuffmanTree_CodeTable_address0;
output   HuffmanTree_CodeTable_ce0;
output   HuffmanTree_CodeTable_we0;
output  [8:0] HuffmanTree_CodeTable_d0;
output  [7:0] code_lengths_address0;
output   code_lengths_ce0;
output   code_lengths_we0;
output  [7:0] code_lengths_d0;
input  [7:0] code_lengths_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] HuffmanTree_HuffmanCodes_V_address0;
reg HuffmanTree_HuffmanCodes_V_ce0;
reg HuffmanTree_HuffmanCodes_V_we0;
reg HuffmanTree_CodeLengths_V_ce0;
reg HuffmanTree_CodeLengths_V_we0;
reg HuffmanTree_CodeTable_ce0;
reg HuffmanTree_CodeTable_we0;
reg[7:0] code_lengths_address0;
reg code_lengths_ce0;
reg code_lengths_we0;
reg[7:0] code_lengths_d0;

(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_32;
reg   [8:0] i2_reg_279;
reg   [31:0] code_reg_314;
reg   [7:0] length_reg_326;
reg   [31:0] i4_reg_338;
reg   [8:0] i_i_reg_348;
reg   [7:0] reg_361;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_82;
reg    ap_sig_cseq_ST_pp3_stg0_fsm_11;
reg    ap_sig_89;
reg    ap_reg_ppiten_pp3_it1;
reg    ap_reg_ppiten_pp3_it0;
reg   [0:0] icmp_reg_743;
wire   [7:0] bytes_q0;
reg   [7:0] reg_367;
reg    ap_sig_cseq_ST_pp3_stg1_fsm_12;
reg    ap_sig_109;
wire   [8:0] i_7_fu_378_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_121;
wire   [0:0] exitcond2_fu_394_p2;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_130;
wire  signed [31:0] j_0_in_cast_fu_406_p1;
reg  signed [31:0] j_0_in_cast_reg_659;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_145;
wire   [8:0] j_fu_410_p2;
reg   [8:0] j_reg_664;
wire   [0:0] tmp_22_fu_420_p2;
reg   [0:0] tmp_22_reg_669;
wire   [63:0] tmp_25_fu_426_p1;
reg   [63:0] tmp_25_reg_673;
reg   [7:0] code_lengths_load_2_reg_683;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_164;
wire   [0:0] tmp_26_fu_431_p2;
wire   [8:0] i_9_fu_443_p2;
wire   [0:0] exitcond_fu_454_p2;
reg   [0:0] exitcond_reg_701;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_7;
reg    ap_sig_187;
reg    ap_reg_ppiten_pp1_it0;
reg    ap_reg_ppiten_pp1_it1;
wire   [8:0] i_8_fu_460_p2;
wire   [0:0] tmp_32_fu_477_p3;
reg   [0:0] tmp_32_reg_720;
reg    ap_sig_cseq_ST_st10_fsm_8;
reg    ap_sig_209;
wire   [8:0] i_11_fu_485_p2;
reg   [8:0] i_11_reg_724;
wire   [31:0] i_10_cast_fu_502_p1;
reg   [31:0] i_10_cast_reg_737;
reg    ap_sig_cseq_ST_st12_fsm_10;
reg    ap_sig_224;
wire   [0:0] icmp_fu_516_p2;
wire   [0:0] tmp_33_fu_522_p2;
reg   [0:0] tmp_33_reg_747;
wire   [31:0] val_assign_1_fu_587_p3;
reg   [31:0] val_assign_1_reg_763;
wire   [15:0] tmp_42_fu_600_p1;
reg   [15:0] tmp_42_reg_773;
wire   [31:0] i_15_fu_604_p2;
reg   [31:0] i_15_reg_778;
wire   [0:0] exitcond_i_fu_615_p2;
reg   [0:0] exitcond_i_reg_783;
reg    ap_sig_cseq_ST_pp4_stg0_fsm_13;
reg    ap_sig_252;
reg    ap_reg_ppiten_pp4_it0;
reg    ap_reg_ppiten_pp4_it1;
wire   [8:0] i_16_fu_621_p2;
reg   [8:0] i_16_reg_787;
reg   [7:0] bytes_address0;
reg    bytes_ce0;
reg    bytes_we0;
reg   [7:0] bytes_d0;
reg   [8:0] i_reg_245;
wire   [0:0] exitcond1_fu_372_p2;
reg   [8:0] i1_reg_256;
reg   [8:0] j_0_in_reg_268;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_308;
reg   [8:0] index_first_code_reg_290;
reg    ap_sig_cseq_ST_st11_fsm_9;
reg    ap_sig_319;
wire   [0:0] tmp_31_fu_496_p2;
reg   [8:0] i_14_reg_302;
reg   [31:0] i4_phi_fu_341_p4;
reg   [8:0] i_i_phi_fu_353_p4;
wire   [63:0] tmp_s_fu_389_p1;
wire   [63:0] tmp_21_fu_400_p1;
wire  signed [63:0] tmp_27_fu_437_p1;
wire   [63:0] tmp_29_fu_449_p1;
wire   [63:0] tmp_23_fu_466_p1;
wire   [63:0] tmp_24_fu_472_p1;
wire   [63:0] tmp_30_fu_491_p1;
wire  signed [63:0] tmp_35_fu_527_p1;
wire  signed [63:0] length_1_in_cast_fu_595_p1;
wire   [63:0] tmp_40_fu_610_p1;
wire   [63:0] tmp_i_fu_627_p1;
wire   [63:0] tmp_i_29_fu_632_p1;
wire   [7:0] tmp_fu_384_p1;
wire  signed [31:0] j_cast_fu_416_p1;
wire   [23:0] tmp_39_fu_506_p4;
wire   [8:0] tmp_36_cast9_fu_537_p1;
wire   [8:0] length_cast_fu_533_p1;
wire   [8:0] tmp_38_fu_553_p2;
wire   [31:0] code_2_fu_547_p2;
wire  signed [31:0] tmp_38_cast_fu_559_p1;
wire   [0:0] tmp_37_fu_541_p2;
wire   [0:0] sel_tmp1_fu_576_p2;
wire   [0:0] sel_tmp2_fu_581_p2;
wire   [31:0] code_3_fu_563_p2;
wire   [31:0] sel_tmp_fu_569_p3;
reg    ap_sig_cseq_ST_st18_fsm_14;
reg    ap_sig_534;
reg   [14:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'b1;
#0 ap_reg_ppiten_pp3_it1 = 1'b0;
#0 ap_reg_ppiten_pp3_it0 = 1'b0;
#0 ap_reg_ppiten_pp1_it0 = 1'b0;
#0 ap_reg_ppiten_pp1_it1 = 1'b0;
#0 ap_reg_ppiten_pp4_it0 = 1'b0;
#0 ap_reg_ppiten_pp4_it1 = 1'b0;
end

huffman_DecodeCodebook_bytes #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
bytes_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bytes_address0),
    .ce0(bytes_ce0),
    .we0(bytes_we0),
    .d0(bytes_d0),
    .q0(bytes_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_7) & ~(1'b0 == exitcond_fu_454_p2))) begin
            ap_reg_ppiten_pp1_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond2_fu_394_p2))) begin
            ap_reg_ppiten_pp1_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_7) & (1'b0 == exitcond_fu_454_p2))) begin
            ap_reg_ppiten_pp1_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond2_fu_394_p2)) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_7) & ~(1'b0 == exitcond_fu_454_p2)))) begin
            ap_reg_ppiten_pp1_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp3_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_11) & (1'b0 == icmp_fu_516_p2))) begin
            ap_reg_ppiten_pp3_it0 <= 1'b0;
        end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_10)) begin
            ap_reg_ppiten_pp3_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp3_it1 <= 1'b0;
    end else begin
        if ((~(icmp_reg_743 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp3_stg1_fsm_12))) begin
            ap_reg_ppiten_pp3_it1 <= 1'b1;
        end else if (((1'b1 == ap_sig_cseq_ST_st12_fsm_10) | ((icmp_reg_743 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp3_stg1_fsm_12)))) begin
            ap_reg_ppiten_pp3_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp4_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp4_stg0_fsm_13) & ~(1'b0 == exitcond_i_fu_615_p2))) begin
            ap_reg_ppiten_pp4_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_11) & (1'b1 == ap_reg_ppiten_pp3_it0) & (1'b0 == icmp_fu_516_p2))) begin
            ap_reg_ppiten_pp4_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp4_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp4_stg0_fsm_13) & (1'b0 == exitcond_i_fu_615_p2))) begin
            ap_reg_ppiten_pp4_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_11) & (1'b1 == ap_reg_ppiten_pp3_it0) & (1'b0 == icmp_fu_516_p2)) | ((1'b1 == ap_sig_cseq_ST_pp4_stg0_fsm_13) & ~(1'b0 == exitcond_i_fu_615_p2)))) begin
            ap_reg_ppiten_pp4_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_11) & (1'b1 == ap_reg_ppiten_pp3_it1) & ~(icmp_reg_743 == 1'b0))) begin
        code_reg_314 <= val_assign_1_reg_763;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_10)) begin
        code_reg_314 <= ap_const_lv32_FFFFFFFF;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond1_fu_372_p2))) begin
        i1_reg_256 <= ap_const_lv9_1;
    end else if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ((1'b0 == tmp_22_reg_669) | (1'b0 == tmp_26_fu_431_p2)))) begin
        i1_reg_256 <= i_9_fu_443_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond2_fu_394_p2))) begin
        i2_reg_279 <= ap_const_lv9_0;
    end else if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_7) & (1'b1 == ap_reg_ppiten_pp1_it0) & (1'b0 == exitcond_fu_454_p2))) begin
        i2_reg_279 <= i_8_fu_460_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_11) & (1'b1 == ap_reg_ppiten_pp3_it1) & ~(icmp_reg_743 == 1'b0))) begin
        i4_reg_338 <= i_15_reg_778;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_10)) begin
        i4_reg_338 <= i_10_cast_fu_502_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_9) & (1'b0 == tmp_32_reg_720) & (1'b0 == tmp_31_fu_496_p2))) begin
        i_14_reg_302 <= index_first_code_reg_290;
    end else if (((1'b1 == ap_sig_cseq_ST_st10_fsm_8) & ~(1'b0 == tmp_32_fu_477_p3))) begin
        i_14_reg_302 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_11) & (1'b1 == ap_reg_ppiten_pp3_it0) & (1'b0 == icmp_fu_516_p2))) begin
        i_i_reg_348 <= ap_const_lv9_0;
    end else if (((1'b1 == ap_sig_cseq_ST_pp4_stg0_fsm_13) & (1'b1 == ap_reg_ppiten_pp4_it1) & (1'b0 == exitcond_i_reg_783))) begin
        i_i_reg_348 <= i_16_reg_787;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond1_fu_372_p2))) begin
        i_reg_245 <= i_7_fu_378_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        i_reg_245 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_7) & (1'b1 == ap_reg_ppiten_pp1_it0) & ~(1'b0 == exitcond_fu_454_p2))) begin
        index_first_code_reg_290 <= ap_const_lv9_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st11_fsm_9) & (1'b0 == tmp_32_reg_720) & ~(1'b0 == tmp_31_fu_496_p2))) begin
        index_first_code_reg_290 <= i_11_reg_724;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        j_0_in_reg_268 <= j_reg_664;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        j_0_in_reg_268 <= i1_reg_256;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_11) & (1'b1 == ap_reg_ppiten_pp3_it1) & ~(icmp_reg_743 == 1'b0))) begin
        length_reg_326 <= code_lengths_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_10)) begin
        length_reg_326 <= ap_const_lv8_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == tmp_22_reg_669))) begin
        code_lengths_load_2_reg_683 <= code_lengths_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_pp4_stg0_fsm_13)) begin
        exitcond_i_reg_783 <= exitcond_i_fu_615_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_7)) begin
        exitcond_reg_701 <= exitcond_fu_454_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_10)) begin
        i_10_cast_reg_737[8 : 0] <= i_10_cast_fu_502_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_8)) begin
        i_11_reg_724 <= i_11_fu_485_p2;
        tmp_32_reg_720 <= index_first_code_reg_290[ap_const_lv32_8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp3_it0) & ~(icmp_reg_743 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp3_stg1_fsm_12))) begin
        i_15_reg_778 <= i_15_fu_604_p2;
        val_assign_1_reg_763 <= val_assign_1_fu_587_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp4_stg0_fsm_13) & (1'b1 == ap_reg_ppiten_pp4_it0))) begin
        i_16_reg_787 <= i_16_fu_621_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_11)) begin
        icmp_reg_743 <= icmp_fu_516_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        j_0_in_cast_reg_659 <= j_0_in_cast_fu_406_p1;
        j_reg_664 <= j_fu_410_p2;
        tmp_22_reg_669 <= tmp_22_fu_420_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) | ((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_11) & (1'b1 == ap_reg_ppiten_pp3_it1) & ~(icmp_reg_743 == 1'b0)))) begin
        reg_361 <= code_lengths_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) | ((1'b1 == ap_reg_ppiten_pp3_it0) & ~(icmp_reg_743 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp3_stg1_fsm_12)))) begin
        reg_367 <= bytes_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == tmp_22_fu_420_p2))) begin
        tmp_25_reg_673[31 : 0] <= tmp_25_fu_426_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_11) & ~(1'b0 == icmp_fu_516_p2))) begin
        tmp_33_reg_747 <= tmp_33_fu_522_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(icmp_reg_743 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp3_stg1_fsm_12))) begin
        tmp_42_reg_773 <= tmp_42_fu_600_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_7) & (1'b1 == ap_reg_ppiten_pp1_it1))) begin
        HuffmanTree_CodeLengths_V_ce0 = 1'b1;
    end else begin
        HuffmanTree_CodeLengths_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_7) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond_reg_701))) begin
        HuffmanTree_CodeLengths_V_we0 = 1'b1;
    end else begin
        HuffmanTree_CodeLengths_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp4_stg0_fsm_13) & (1'b1 == ap_reg_ppiten_pp4_it1))) begin
        HuffmanTree_CodeTable_ce0 = 1'b1;
    end else begin
        HuffmanTree_CodeTable_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp4_stg0_fsm_13) & (1'b1 == ap_reg_ppiten_pp4_it1) & (1'b0 == exitcond_i_reg_783))) begin
        HuffmanTree_CodeTable_we0 = 1'b1;
    end else begin
        HuffmanTree_CodeTable_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_11) & (1'b1 == ap_reg_ppiten_pp3_it1))) begin
        HuffmanTree_HuffmanCodes_V_address0 = tmp_40_fu_610_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_pp4_stg0_fsm_13) & (1'b1 == ap_reg_ppiten_pp4_it0))) begin
        HuffmanTree_HuffmanCodes_V_address0 = tmp_i_fu_627_p1;
    end else begin
        HuffmanTree_HuffmanCodes_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_11) & (1'b1 == ap_reg_ppiten_pp3_it1)) | ((1'b1 == ap_sig_cseq_ST_pp4_stg0_fsm_13) & (1'b1 == ap_reg_ppiten_pp4_it0)))) begin
        HuffmanTree_HuffmanCodes_V_ce0 = 1'b1;
    end else begin
        HuffmanTree_HuffmanCodes_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_11) & (1'b1 == ap_reg_ppiten_pp3_it1) & ~(icmp_reg_743 == 1'b0))) begin
        HuffmanTree_HuffmanCodes_V_we0 = 1'b1;
    end else begin
        HuffmanTree_HuffmanCodes_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | (1'b1 == ap_sig_cseq_ST_st18_fsm_14))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_14)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_187) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_89) begin
        ap_sig_cseq_ST_pp3_stg0_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp3_stg0_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_109) begin
        ap_sig_cseq_ST_pp3_stg1_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp3_stg1_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_252) begin
        ap_sig_cseq_ST_pp4_stg0_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp4_stg0_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_209) begin
        ap_sig_cseq_ST_st10_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_319) begin
        ap_sig_cseq_ST_st11_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_224) begin
        ap_sig_cseq_ST_st12_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_534) begin
        ap_sig_cseq_ST_st18_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_32) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_121) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_130) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_82) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_145) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_164) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_308) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        bytes_address0 = tmp_29_fu_449_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ((1'b0 == tmp_22_reg_669) | (1'b0 == tmp_26_fu_431_p2)))) begin
        bytes_address0 = tmp_27_fu_437_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        bytes_address0 = tmp_s_fu_389_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_11) & (1'b1 == ap_reg_ppiten_pp3_it0))) begin
        bytes_address0 = tmp_35_fu_527_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_7) & (1'b1 == ap_reg_ppiten_pp1_it0))) begin
        bytes_address0 = tmp_23_fu_466_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == tmp_22_reg_669) & ~(1'b0 == tmp_26_fu_431_p2))) begin
        bytes_address0 = tmp_25_reg_673;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        bytes_address0 = tmp_21_fu_400_p1;
    end else begin
        bytes_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | ((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == tmp_22_reg_669) & ~(1'b0 == tmp_26_fu_431_p2)) | ((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ((1'b0 == tmp_22_reg_669) | (1'b0 == tmp_26_fu_431_p2))) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_7) & (1'b1 == ap_reg_ppiten_pp1_it0)) | ((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_11) & (1'b1 == ap_reg_ppiten_pp3_it0)) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        bytes_ce0 = 1'b1;
    end else begin
        bytes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        bytes_d0 = bytes_q0;
    end else if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ((1'b0 == tmp_22_reg_669) | (1'b0 == tmp_26_fu_431_p2)))) begin
        bytes_d0 = reg_367;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        bytes_d0 = tmp_fu_384_p1;
    end else begin
        bytes_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ((1'b0 == tmp_22_reg_669) | (1'b0 == tmp_26_fu_431_p2))) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond1_fu_372_p2)) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        bytes_we0 = 1'b1;
    end else begin
        bytes_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        code_lengths_address0 = tmp_29_fu_449_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        code_lengths_address0 = tmp_27_fu_437_p1;
    end else if (((1'b1 == ap_reg_ppiten_pp3_it0) & (1'b1 == ap_sig_cseq_ST_pp3_stg1_fsm_12))) begin
        code_lengths_address0 = length_1_in_cast_fu_595_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_11) & (1'b1 == ap_reg_ppiten_pp3_it0))) begin
        code_lengths_address0 = tmp_35_fu_527_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_8)) begin
        code_lengths_address0 = tmp_30_fu_491_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_7) & (1'b1 == ap_reg_ppiten_pp1_it0))) begin
        code_lengths_address0 = tmp_23_fu_466_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        code_lengths_address0 = tmp_25_fu_426_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        code_lengths_address0 = tmp_21_fu_400_p1;
    end else begin
        code_lengths_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_reg_ppiten_pp3_it0) & (1'b1 == ap_sig_cseq_ST_pp3_stg1_fsm_12)) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_7) & (1'b1 == ap_reg_ppiten_pp1_it0)) | (1'b1 == ap_sig_cseq_ST_st10_fsm_8) | ((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_11) & (1'b1 == ap_reg_ppiten_pp3_it0)) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        code_lengths_ce0 = 1'b1;
    end else begin
        code_lengths_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        code_lengths_d0 = code_lengths_load_2_reg_683;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        code_lengths_d0 = reg_361;
    end else begin
        code_lengths_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ((1'b0 == tmp_22_reg_669) | (1'b0 == tmp_26_fu_431_p2))) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        code_lengths_we0 = 1'b1;
    end else begin
        code_lengths_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp3_stg0_fsm_11) & (1'b1 == ap_reg_ppiten_pp3_it1) & ~(icmp_reg_743 == 1'b0))) begin
        i4_phi_fu_341_p4 = i_15_reg_778;
    end else begin
        i4_phi_fu_341_p4 = i4_reg_338;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp4_stg0_fsm_13) & (1'b1 == ap_reg_ppiten_pp4_it1) & (1'b0 == exitcond_i_reg_783))) begin
        i_i_phi_fu_353_p4 = i_16_reg_787;
    end else begin
        i_i_phi_fu_353_p4 = i_i_reg_348;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if ((1'b0 == exitcond1_fu_372_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if (~(1'b0 == exitcond2_fu_394_p2)) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            if (((1'b0 == tmp_22_reg_669) | (1'b0 == tmp_26_fu_431_p2))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_pp1_stg0_fsm_7 : begin
            if (~((1'b1 == ap_reg_ppiten_pp1_it0) & ~(1'b0 == exitcond_fu_454_p2))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_8;
            end
        end
        ap_ST_st10_fsm_8 : begin
            ap_NS_fsm = ap_ST_st11_fsm_9;
        end
        ap_ST_st11_fsm_9 : begin
            if (((1'b0 == tmp_32_reg_720) & ~(1'b0 == tmp_31_fu_496_p2))) begin
                ap_NS_fsm = ap_ST_st10_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_10;
            end
        end
        ap_ST_st12_fsm_10 : begin
            ap_NS_fsm = ap_ST_pp3_stg0_fsm_11;
        end
        ap_ST_pp3_stg0_fsm_11 : begin
            if (~((1'b1 == ap_reg_ppiten_pp3_it0) & (1'b0 == icmp_fu_516_p2))) begin
                ap_NS_fsm = ap_ST_pp3_stg1_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_pp4_stg0_fsm_13;
            end
        end
        ap_ST_pp3_stg1_fsm_12 : begin
            ap_NS_fsm = ap_ST_pp3_stg0_fsm_11;
        end
        ap_ST_pp4_stg0_fsm_13 : begin
            if (~((1'b1 == ap_reg_ppiten_pp4_it0) & ~(1'b0 == exitcond_i_fu_615_p2))) begin
                ap_NS_fsm = ap_ST_pp4_stg0_fsm_13;
            end else begin
                ap_NS_fsm = ap_ST_st18_fsm_14;
            end
        end
        ap_ST_st18_fsm_14 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign HuffmanTree_CodeLengths_V_address0 = tmp_24_fu_472_p1;

assign HuffmanTree_CodeLengths_V_d0 = code_lengths_q0;

assign HuffmanTree_CodeTable_address0 = tmp_i_29_fu_632_p1;

assign HuffmanTree_CodeTable_d0 = i_i_reg_348;

assign HuffmanTree_HuffmanCodes_V_d0 = tmp_42_reg_773;

always @ (*) begin
    ap_sig_109 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_121 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_130 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_145 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_164 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_187 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_209 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_224 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_252 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_308 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_319 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_32 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_534 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

always @ (*) begin
    ap_sig_82 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_89 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

assign code_2_fu_547_p2 = (ap_const_lv32_1 + code_reg_314);

assign code_3_fu_563_p2 = code_2_fu_547_p2 << tmp_38_cast_fu_559_p1;

assign exitcond1_fu_372_p2 = ((i_reg_245 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign exitcond2_fu_394_p2 = ((i1_reg_256 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign exitcond_fu_454_p2 = ((i2_reg_279 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign exitcond_i_fu_615_p2 = ((i_i_phi_fu_353_p4 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign i_10_cast_fu_502_p1 = i_14_reg_302;

assign i_11_fu_485_p2 = (index_first_code_reg_290 + ap_const_lv9_1);

assign i_15_fu_604_p2 = (ap_const_lv32_1 + i4_reg_338);

assign i_16_fu_621_p2 = (i_i_phi_fu_353_p4 + ap_const_lv9_1);

assign i_7_fu_378_p2 = (i_reg_245 + ap_const_lv9_1);

assign i_8_fu_460_p2 = (i2_reg_279 + ap_const_lv9_1);

assign i_9_fu_443_p2 = (i1_reg_256 + ap_const_lv9_1);

assign icmp_fu_516_p2 = (($signed(tmp_39_fu_506_p4) < $signed(24'b1)) ? 1'b1 : 1'b0);

assign j_0_in_cast_fu_406_p1 = $signed(j_0_in_reg_268);

assign j_cast_fu_416_p1 = $signed(j_fu_410_p2);

assign j_fu_410_p2 = ($signed(j_0_in_reg_268) + $signed(ap_const_lv9_1FF));

assign length_1_in_cast_fu_595_p1 = $signed(i4_reg_338);

assign length_cast_fu_533_p1 = length_reg_326;

assign sel_tmp1_fu_576_p2 = (tmp_33_reg_747 ^ 1'b1);

assign sel_tmp2_fu_581_p2 = (tmp_37_fu_541_p2 & sel_tmp1_fu_576_p2);

assign sel_tmp_fu_569_p3 = ((tmp_33_reg_747[0:0] === 1'b1) ? ap_const_lv32_0 : code_2_fu_547_p2);

assign tmp_21_fu_400_p1 = i1_reg_256;

assign tmp_22_fu_420_p2 = (($signed(j_0_in_reg_268) > $signed(9'b000000000)) ? 1'b1 : 1'b0);

assign tmp_23_fu_466_p1 = i2_reg_279;

assign tmp_24_fu_472_p1 = bytes_q0;

assign tmp_25_fu_426_p1 = $unsigned(j_cast_fu_416_p1);

assign tmp_26_fu_431_p2 = ((code_lengths_q0 > reg_361) ? 1'b1 : 1'b0);

assign tmp_27_fu_437_p1 = $signed(j_0_in_reg_268);

assign tmp_29_fu_449_p1 = $unsigned(j_0_in_cast_reg_659);

assign tmp_30_fu_491_p1 = index_first_code_reg_290;

assign tmp_31_fu_496_p2 = ((code_lengths_q0 == ap_const_lv8_0) ? 1'b1 : 1'b0);

assign tmp_32_fu_477_p3 = index_first_code_reg_290[ap_const_lv32_8];

assign tmp_33_fu_522_p2 = ((i4_phi_fu_341_p4 == i_10_cast_reg_737) ? 1'b1 : 1'b0);

assign tmp_35_fu_527_p1 = $signed(i4_phi_fu_341_p4);

assign tmp_36_cast9_fu_537_p1 = code_lengths_q0;

assign tmp_37_fu_541_p2 = ((code_lengths_q0 > length_reg_326) ? 1'b1 : 1'b0);

assign tmp_38_cast_fu_559_p1 = $signed(tmp_38_fu_553_p2);

assign tmp_38_fu_553_p2 = (tmp_36_cast9_fu_537_p1 - length_cast_fu_533_p1);

assign tmp_39_fu_506_p4 = {{i4_phi_fu_341_p4[ap_const_lv32_1F : ap_const_lv32_8]}};

assign tmp_40_fu_610_p1 = reg_367;

assign tmp_42_fu_600_p1 = val_assign_1_fu_587_p3[15:0];

assign tmp_fu_384_p1 = i_reg_245[7:0];

assign tmp_i_29_fu_632_p1 = HuffmanTree_HuffmanCodes_V_q0;

assign tmp_i_fu_627_p1 = i_i_phi_fu_353_p4;

assign tmp_s_fu_389_p1 = i_reg_245;

assign val_assign_1_fu_587_p3 = ((sel_tmp2_fu_581_p2[0:0] === 1'b1) ? code_3_fu_563_p2 : sel_tmp_fu_569_p3);

always @ (posedge ap_clk) begin
    tmp_25_reg_673[63:32] <= 32'b00000000000000000000000000000000;
    i_10_cast_reg_737[31:9] <= 23'b00000000000000000000000;
end

endmodule //huffman_DecodeCodebook
