-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity huffman_DecodeCodebook is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    HuffmanTree_HuffmanCodes_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    HuffmanTree_HuffmanCodes_V_ce0 : OUT STD_LOGIC;
    HuffmanTree_HuffmanCodes_V_we0 : OUT STD_LOGIC;
    HuffmanTree_HuffmanCodes_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    HuffmanTree_HuffmanCodes_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    HuffmanTree_CodeLengths_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    HuffmanTree_CodeLengths_V_ce0 : OUT STD_LOGIC;
    HuffmanTree_CodeLengths_V_we0 : OUT STD_LOGIC;
    HuffmanTree_CodeLengths_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    HuffmanTree_CodeTable_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    HuffmanTree_CodeTable_ce0 : OUT STD_LOGIC;
    HuffmanTree_CodeTable_we0 : OUT STD_LOGIC;
    HuffmanTree_CodeTable_d0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    code_lengths_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    code_lengths_ce0 : OUT STD_LOGIC;
    code_lengths_we0 : OUT STD_LOGIC;
    code_lengths_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    code_lengths_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of huffman_DecodeCodebook is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_pp1_stg0_fsm_7 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_st10_fsm_8 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_st11_fsm_9 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_st12_fsm_10 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_pp3_stg0_fsm_11 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_pp3_stg1_fsm_12 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_pp4_stg0_fsm_13 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_st18_fsm_14 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv24_1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_32 : BOOLEAN;
    signal i2_reg_279 : STD_LOGIC_VECTOR (8 downto 0);
    signal code_reg_314 : STD_LOGIC_VECTOR (31 downto 0);
    signal length_reg_326 : STD_LOGIC_VECTOR (7 downto 0);
    signal i4_reg_338 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_i_reg_348 : STD_LOGIC_VECTOR (8 downto 0);
    signal reg_361 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_82 : BOOLEAN;
    signal ap_sig_cseq_ST_pp3_stg0_fsm_11 : STD_LOGIC;
    signal ap_sig_89 : BOOLEAN;
    signal ap_reg_ppiten_pp3_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp3_it0 : STD_LOGIC := '0';
    signal icmp_reg_743 : STD_LOGIC_VECTOR (0 downto 0);
    signal bytes_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_367 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_pp3_stg1_fsm_12 : STD_LOGIC;
    signal ap_sig_109 : BOOLEAN;
    signal i_7_fu_378_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_121 : BOOLEAN;
    signal exitcond2_fu_394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_130 : BOOLEAN;
    signal j_0_in_cast_fu_406_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_0_in_cast_reg_659 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_145 : BOOLEAN;
    signal j_fu_410_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_reg_664 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_22_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_669 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_426_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_reg_673 : STD_LOGIC_VECTOR (63 downto 0);
    signal code_lengths_load_2_reg_683 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_164 : BOOLEAN;
    signal tmp_26_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_9_fu_443_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond_fu_454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_701 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp1_stg0_fsm_7 : STD_LOGIC;
    signal ap_sig_187 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal i_8_fu_460_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_32_fu_477_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_720 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_8 : STD_LOGIC;
    signal ap_sig_209 : BOOLEAN;
    signal i_11_fu_485_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_11_reg_724 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_10_cast_fu_502_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_10_cast_reg_737 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_10 : STD_LOGIC;
    signal ap_sig_224 : BOOLEAN;
    signal icmp_fu_516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_reg_747 : STD_LOGIC_VECTOR (0 downto 0);
    signal val_assign_1_fu_587_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_assign_1_reg_763 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_fu_600_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_42_reg_773 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_15_fu_604_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_15_reg_778 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_i_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_783 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp4_stg0_fsm_13 : STD_LOGIC;
    signal ap_sig_252 : BOOLEAN;
    signal ap_reg_ppiten_pp4_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp4_it1 : STD_LOGIC := '0';
    signal i_16_fu_621_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_16_reg_787 : STD_LOGIC_VECTOR (8 downto 0);
    signal bytes_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bytes_ce0 : STD_LOGIC;
    signal bytes_we0 : STD_LOGIC;
    signal bytes_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_reg_245 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond1_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i1_reg_256 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_0_in_reg_268 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_308 : BOOLEAN;
    signal index_first_code_reg_290 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_9 : STD_LOGIC;
    signal ap_sig_319 : BOOLEAN;
    signal tmp_31_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_14_reg_302 : STD_LOGIC_VECTOR (8 downto 0);
    signal i4_phi_fu_341_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_i_phi_fu_353_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_fu_389_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_400_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_fu_437_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_449_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_466_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_fu_472_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_fu_491_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_35_fu_527_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal length_1_in_cast_fu_595_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_610_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_fu_627_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_29_fu_632_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_384_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_cast_fu_416_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_506_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_36_cast9_fu_537_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal length_cast_fu_533_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_38_fu_553_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal code_2_fu_547_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_cast_fu_559_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal code_3_fu_563_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp_fu_569_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_14 : STD_LOGIC;
    signal ap_sig_534 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);

    component huffman_DecodeCodebook_bytes IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    bytes_U : component huffman_DecodeCodebook_bytes
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bytes_address0,
        ce0 => bytes_ce0,
        we0 => bytes_we0,
        d0 => bytes_d0,
        q0 => bytes_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and not((ap_const_lv1_0 = exitcond_fu_454_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond2_fu_394_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and (ap_const_lv1_0 = exitcond_fu_454_p2))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond2_fu_394_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and not((ap_const_lv1_0 = exitcond_fu_454_p2))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp3_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_11) and (ap_const_lv1_0 = icmp_fu_516_p2))) then 
                    ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_10)) then 
                    ap_reg_ppiten_pp3_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp3_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
            else
                if ((not((icmp_reg_743 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg1_fsm_12))) then 
                    ap_reg_ppiten_pp3_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_10) or ((icmp_reg_743 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg1_fsm_12)))) then 
                    ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp4_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp4_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_13) and not((ap_const_lv1_0 = exitcond_i_fu_615_p2)))) then 
                    ap_reg_ppiten_pp4_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and (ap_const_lv1_0 = icmp_fu_516_p2))) then 
                    ap_reg_ppiten_pp4_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp4_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp4_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_13) and (ap_const_lv1_0 = exitcond_i_fu_615_p2))) then 
                    ap_reg_ppiten_pp4_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and (ap_const_lv1_0 = icmp_fu_516_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_13) and not((ap_const_lv1_0 = exitcond_i_fu_615_p2))))) then 
                    ap_reg_ppiten_pp4_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    code_reg_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1) and not((icmp_reg_743 = ap_const_lv1_0)))) then 
                code_reg_314 <= val_assign_1_reg_763;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_10)) then 
                code_reg_314 <= ap_const_lv32_FFFFFFFF;
            end if; 
        end if;
    end process;

    i1_reg_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond1_fu_372_p2)))) then 
                i1_reg_256 <= ap_const_lv9_1;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and ((ap_const_lv1_0 = tmp_22_reg_669) or (ap_const_lv1_0 = tmp_26_fu_431_p2)))) then 
                i1_reg_256 <= i_9_fu_443_p2;
            end if; 
        end if;
    end process;

    i2_reg_279_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond2_fu_394_p2)))) then 
                i2_reg_279 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_fu_454_p2))) then 
                i2_reg_279 <= i_8_fu_460_p2;
            end if; 
        end if;
    end process;

    i4_reg_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1) and not((icmp_reg_743 = ap_const_lv1_0)))) then 
                i4_reg_338 <= i_15_reg_778;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_10)) then 
                i4_reg_338 <= i_10_cast_fu_502_p1;
            end if; 
        end if;
    end process;

    i_14_reg_302_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_9) and (ap_const_lv1_0 = tmp_32_reg_720) and (ap_const_lv1_0 = tmp_31_fu_496_p2))) then 
                i_14_reg_302 <= index_first_code_reg_290;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_8) and not((ap_const_lv1_0 = tmp_32_fu_477_p3)))) then 
                i_14_reg_302 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    i_i_reg_348_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and (ap_const_lv1_0 = icmp_fu_516_p2))) then 
                i_i_reg_348 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_13) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_lv1_0 = exitcond_i_reg_783))) then 
                i_i_reg_348 <= i_16_reg_787;
            end if; 
        end if;
    end process;

    i_reg_245_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond1_fu_372_p2))) then 
                i_reg_245 <= i_7_fu_378_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_245 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    index_first_code_reg_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = exitcond_fu_454_p2)))) then 
                index_first_code_reg_290 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_9) and (ap_const_lv1_0 = tmp_32_reg_720) and not((ap_const_lv1_0 = tmp_31_fu_496_p2)))) then 
                index_first_code_reg_290 <= i_11_reg_724;
            end if; 
        end if;
    end process;

    j_0_in_reg_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
                j_0_in_reg_268 <= j_reg_664;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                j_0_in_reg_268 <= i1_reg_256;
            end if; 
        end if;
    end process;

    length_reg_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1) and not((icmp_reg_743 = ap_const_lv1_0)))) then 
                length_reg_326 <= code_lengths_q0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_10)) then 
                length_reg_326 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = tmp_22_reg_669)))) then
                code_lengths_load_2_reg_683 <= code_lengths_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_13)) then
                exitcond_i_reg_783 <= exitcond_i_fu_615_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7)) then
                exitcond_reg_701 <= exitcond_fu_454_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_10)) then
                    i_10_cast_reg_737(8 downto 0) <= i_10_cast_fu_502_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_8)) then
                i_11_reg_724 <= i_11_fu_485_p2;
                tmp_32_reg_720 <= index_first_code_reg_290(8 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and not((icmp_reg_743 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg1_fsm_12))) then
                i_15_reg_778 <= i_15_fu_604_p2;
                val_assign_1_reg_763 <= val_assign_1_fu_587_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_13) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it0))) then
                i_16_reg_787 <= i_16_fu_621_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_11)) then
                icmp_reg_743 <= icmp_fu_516_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                j_0_in_cast_reg_659 <= j_0_in_cast_fu_406_p1;
                j_reg_664 <= j_fu_410_p2;
                tmp_22_reg_669 <= tmp_22_fu_420_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1) and not((icmp_reg_743 = ap_const_lv1_0))))) then
                reg_361 <= code_lengths_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or ((ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and not((icmp_reg_743 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg1_fsm_12)))) then
                reg_367 <= bytes_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = tmp_22_fu_420_p2)))) then
                    tmp_25_reg_673(31 downto 0) <= tmp_25_fu_426_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_11) and not((ap_const_lv1_0 = icmp_fu_516_p2)))) then
                tmp_33_reg_747 <= tmp_33_fu_522_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((icmp_reg_743 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg1_fsm_12))) then
                tmp_42_reg_773 <= tmp_42_fu_600_p1;
            end if;
        end if;
    end process;
    tmp_25_reg_673(63 downto 32) <= "00000000000000000000000000000000";
    i_10_cast_reg_737(31 downto 9) <= "00000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_reg_ppiten_pp3_it0, exitcond2_fu_394_p2, tmp_22_reg_669, tmp_26_fu_431_p2, exitcond_fu_454_p2, ap_reg_ppiten_pp1_it0, tmp_32_reg_720, icmp_fu_516_p2, exitcond_i_fu_615_p2, ap_reg_ppiten_pp4_it0, exitcond1_fu_372_p2, tmp_31_fu_496_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((ap_const_lv1_0 = exitcond1_fu_372_p2)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((ap_const_lv1_0 = exitcond2_fu_394_p2))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                if (((ap_const_lv1_0 = tmp_22_reg_669) or (ap_const_lv1_0 = tmp_26_fu_431_p2))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_pp1_stg0_fsm_7 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = exitcond_fu_454_p2))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st10_fsm_8;
                end if;
            when ap_ST_st10_fsm_8 => 
                ap_NS_fsm <= ap_ST_st11_fsm_9;
            when ap_ST_st11_fsm_9 => 
                if (((ap_const_lv1_0 = tmp_32_reg_720) and not((ap_const_lv1_0 = tmp_31_fu_496_p2)))) then
                    ap_NS_fsm <= ap_ST_st10_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_10;
                end if;
            when ap_ST_st12_fsm_10 => 
                ap_NS_fsm <= ap_ST_pp3_stg0_fsm_11;
            when ap_ST_pp3_stg0_fsm_11 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and (ap_const_lv1_0 = icmp_fu_516_p2)))) then
                    ap_NS_fsm <= ap_ST_pp3_stg1_fsm_12;
                else
                    ap_NS_fsm <= ap_ST_pp4_stg0_fsm_13;
                end if;
            when ap_ST_pp3_stg1_fsm_12 => 
                ap_NS_fsm <= ap_ST_pp3_stg0_fsm_11;
            when ap_ST_pp4_stg0_fsm_13 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp4_it0) and not((ap_const_lv1_0 = exitcond_i_fu_615_p2))))) then
                    ap_NS_fsm <= ap_ST_pp4_stg0_fsm_13;
                else
                    ap_NS_fsm <= ap_ST_st18_fsm_14;
                end if;
            when ap_ST_st18_fsm_14 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;
    HuffmanTree_CodeLengths_V_address0 <= tmp_24_fu_472_p1(8 - 1 downto 0);

    HuffmanTree_CodeLengths_V_ce0_assign_proc : process(ap_sig_cseq_ST_pp1_stg0_fsm_7, ap_reg_ppiten_pp1_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            HuffmanTree_CodeLengths_V_ce0 <= ap_const_logic_1;
        else 
            HuffmanTree_CodeLengths_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    HuffmanTree_CodeLengths_V_d0 <= code_lengths_q0;

    HuffmanTree_CodeLengths_V_we0_assign_proc : process(exitcond_reg_701, ap_sig_cseq_ST_pp1_stg0_fsm_7, ap_reg_ppiten_pp1_it1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_reg_701)))) then 
            HuffmanTree_CodeLengths_V_we0 <= ap_const_logic_1;
        else 
            HuffmanTree_CodeLengths_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    HuffmanTree_CodeTable_address0 <= tmp_i_29_fu_632_p1(9 - 1 downto 0);

    HuffmanTree_CodeTable_ce0_assign_proc : process(ap_sig_cseq_ST_pp4_stg0_fsm_13, ap_reg_ppiten_pp4_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_13) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1))) then 
            HuffmanTree_CodeTable_ce0 <= ap_const_logic_1;
        else 
            HuffmanTree_CodeTable_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    HuffmanTree_CodeTable_d0 <= i_i_reg_348;

    HuffmanTree_CodeTable_we0_assign_proc : process(exitcond_i_reg_783, ap_sig_cseq_ST_pp4_stg0_fsm_13, ap_reg_ppiten_pp4_it1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_13) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_lv1_0 = exitcond_i_reg_783)))) then 
            HuffmanTree_CodeTable_we0 <= ap_const_logic_1;
        else 
            HuffmanTree_CodeTable_we0 <= ap_const_logic_0;
        end if; 
    end process;


    HuffmanTree_HuffmanCodes_V_address0_assign_proc : process(ap_sig_cseq_ST_pp3_stg0_fsm_11, ap_reg_ppiten_pp3_it1, ap_sig_cseq_ST_pp4_stg0_fsm_13, ap_reg_ppiten_pp4_it0, tmp_40_fu_610_p1, tmp_i_fu_627_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1))) then 
            HuffmanTree_HuffmanCodes_V_address0 <= tmp_40_fu_610_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_13) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it0))) then 
            HuffmanTree_HuffmanCodes_V_address0 <= tmp_i_fu_627_p1(8 - 1 downto 0);
        else 
            HuffmanTree_HuffmanCodes_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    HuffmanTree_HuffmanCodes_V_ce0_assign_proc : process(ap_sig_cseq_ST_pp3_stg0_fsm_11, ap_reg_ppiten_pp3_it1, ap_sig_cseq_ST_pp4_stg0_fsm_13, ap_reg_ppiten_pp4_it0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_13) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it0)))) then 
            HuffmanTree_HuffmanCodes_V_ce0 <= ap_const_logic_1;
        else 
            HuffmanTree_HuffmanCodes_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    HuffmanTree_HuffmanCodes_V_d0 <= tmp_42_reg_773;

    HuffmanTree_HuffmanCodes_V_we0_assign_proc : process(ap_sig_cseq_ST_pp3_stg0_fsm_11, ap_reg_ppiten_pp3_it1, icmp_reg_743)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1) and not((icmp_reg_743 = ap_const_lv1_0))))) then 
            HuffmanTree_HuffmanCodes_V_we0 <= ap_const_logic_1;
        else 
            HuffmanTree_HuffmanCodes_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st18_fsm_14)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_14))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st18_fsm_14)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_14)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_109_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_109 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_121_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_121 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_130_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_130 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_145_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_145 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_164_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_164 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_187_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_187 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_209_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_209 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_224_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_224 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_252_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_252 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_308_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_308 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_319_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_319 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_32_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_32 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_534_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_534 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_82_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_82 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_89_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_89 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_cseq_ST_pp1_stg0_fsm_7_assign_proc : process(ap_sig_187)
    begin
        if (ap_sig_187) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp3_stg0_fsm_11_assign_proc : process(ap_sig_89)
    begin
        if (ap_sig_89) then 
            ap_sig_cseq_ST_pp3_stg0_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp3_stg0_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp3_stg1_fsm_12_assign_proc : process(ap_sig_109)
    begin
        if (ap_sig_109) then 
            ap_sig_cseq_ST_pp3_stg1_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp3_stg1_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp4_stg0_fsm_13_assign_proc : process(ap_sig_252)
    begin
        if (ap_sig_252) then 
            ap_sig_cseq_ST_pp4_stg0_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp4_stg0_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st10_fsm_8_assign_proc : process(ap_sig_209)
    begin
        if (ap_sig_209) then 
            ap_sig_cseq_ST_st10_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_9_assign_proc : process(ap_sig_319)
    begin
        if (ap_sig_319) then 
            ap_sig_cseq_ST_st11_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_10_assign_proc : process(ap_sig_224)
    begin
        if (ap_sig_224) then 
            ap_sig_cseq_ST_st12_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st18_fsm_14_assign_proc : process(ap_sig_534)
    begin
        if (ap_sig_534) then 
            ap_sig_cseq_ST_st18_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_32)
    begin
        if (ap_sig_32) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_121)
    begin
        if (ap_sig_121) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_130)
    begin
        if (ap_sig_130) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_82)
    begin
        if (ap_sig_82) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_145)
    begin
        if (ap_sig_145) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_164)
    begin
        if (ap_sig_164) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_308)
    begin
        if (ap_sig_308) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    bytes_address0_assign_proc : process(ap_sig_cseq_ST_pp3_stg0_fsm_11, ap_reg_ppiten_pp3_it0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, tmp_22_reg_669, tmp_25_reg_673, ap_sig_cseq_ST_st6_fsm_5, tmp_26_fu_431_p2, ap_sig_cseq_ST_pp1_stg0_fsm_7, ap_reg_ppiten_pp1_it0, ap_sig_cseq_ST_st7_fsm_6, tmp_s_fu_389_p1, tmp_21_fu_400_p1, tmp_27_fu_437_p1, tmp_29_fu_449_p1, tmp_23_fu_466_p1, tmp_35_fu_527_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            bytes_address0 <= tmp_29_fu_449_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and ((ap_const_lv1_0 = tmp_22_reg_669) or (ap_const_lv1_0 = tmp_26_fu_431_p2)))) then 
            bytes_address0 <= tmp_27_fu_437_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            bytes_address0 <= tmp_s_fu_389_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it0))) then 
            bytes_address0 <= tmp_35_fu_527_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            bytes_address0 <= tmp_23_fu_466_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = tmp_22_reg_669)) and not((ap_const_lv1_0 = tmp_26_fu_431_p2)))) then 
            bytes_address0 <= tmp_25_reg_673(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            bytes_address0 <= tmp_21_fu_400_p1(8 - 1 downto 0);
        else 
            bytes_address0 <= "XXXXXXXX";
        end if; 
    end process;


    bytes_ce0_assign_proc : process(ap_sig_cseq_ST_pp3_stg0_fsm_11, ap_reg_ppiten_pp3_it0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, tmp_22_reg_669, ap_sig_cseq_ST_st6_fsm_5, tmp_26_fu_431_p2, ap_sig_cseq_ST_pp1_stg0_fsm_7, ap_reg_ppiten_pp1_it0, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = tmp_22_reg_669)) and not((ap_const_lv1_0 = tmp_26_fu_431_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and ((ap_const_lv1_0 = tmp_22_reg_669) or (ap_const_lv1_0 = tmp_26_fu_431_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it0)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6))) then 
            bytes_ce0 <= ap_const_logic_1;
        else 
            bytes_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bytes_d0_assign_proc : process(bytes_q0, reg_367, ap_sig_cseq_ST_st2_fsm_1, tmp_22_reg_669, ap_sig_cseq_ST_st6_fsm_5, tmp_26_fu_431_p2, ap_sig_cseq_ST_st7_fsm_6, tmp_fu_384_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            bytes_d0 <= bytes_q0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and ((ap_const_lv1_0 = tmp_22_reg_669) or (ap_const_lv1_0 = tmp_26_fu_431_p2)))) then 
            bytes_d0 <= reg_367;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            bytes_d0 <= tmp_fu_384_p1;
        else 
            bytes_d0 <= "XXXXXXXX";
        end if; 
    end process;


    bytes_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, tmp_22_reg_669, ap_sig_cseq_ST_st6_fsm_5, tmp_26_fu_431_p2, exitcond1_fu_372_p2, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and ((ap_const_lv1_0 = tmp_22_reg_669) or (ap_const_lv1_0 = tmp_26_fu_431_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond1_fu_372_p2)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6))) then 
            bytes_we0 <= ap_const_logic_1;
        else 
            bytes_we0 <= ap_const_logic_0;
        end if; 
    end process;

    code_2_fu_547_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(code_reg_314));
    code_3_fu_563_p2 <= std_logic_vector(shift_left(unsigned(code_2_fu_547_p2),to_integer(unsigned('0' & tmp_38_cast_fu_559_p1(31-1 downto 0)))));

    code_lengths_address0_assign_proc : process(ap_sig_cseq_ST_pp3_stg0_fsm_11, ap_reg_ppiten_pp3_it0, ap_sig_cseq_ST_pp3_stg1_fsm_12, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st5_fsm_4, tmp_25_fu_426_p1, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_pp1_stg0_fsm_7, ap_reg_ppiten_pp1_it0, ap_sig_cseq_ST_st10_fsm_8, ap_sig_cseq_ST_st7_fsm_6, tmp_21_fu_400_p1, tmp_27_fu_437_p1, tmp_29_fu_449_p1, tmp_23_fu_466_p1, tmp_30_fu_491_p1, tmp_35_fu_527_p1, length_1_in_cast_fu_595_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            code_lengths_address0 <= tmp_29_fu_449_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            code_lengths_address0 <= tmp_27_fu_437_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg1_fsm_12))) then 
            code_lengths_address0 <= length_1_in_cast_fu_595_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it0))) then 
            code_lengths_address0 <= tmp_35_fu_527_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_8)) then 
            code_lengths_address0 <= tmp_30_fu_491_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            code_lengths_address0 <= tmp_23_fu_466_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            code_lengths_address0 <= tmp_25_fu_426_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            code_lengths_address0 <= tmp_21_fu_400_p1(8 - 1 downto 0);
        else 
            code_lengths_address0 <= "XXXXXXXX";
        end if; 
    end process;


    code_lengths_ce0_assign_proc : process(ap_sig_cseq_ST_pp3_stg0_fsm_11, ap_reg_ppiten_pp3_it0, ap_sig_cseq_ST_pp3_stg1_fsm_12, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_pp1_stg0_fsm_7, ap_reg_ppiten_pp1_it0, ap_sig_cseq_ST_st10_fsm_8, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp3_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg1_fsm_12)) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_7) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_8) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it0)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6))) then 
            code_lengths_ce0 <= ap_const_logic_1;
        else 
            code_lengths_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    code_lengths_d0_assign_proc : process(reg_361, code_lengths_load_2_reg_683, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            code_lengths_d0 <= code_lengths_load_2_reg_683;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            code_lengths_d0 <= reg_361;
        else 
            code_lengths_d0 <= "XXXXXXXX";
        end if; 
    end process;


    code_lengths_we0_assign_proc : process(tmp_22_reg_669, ap_sig_cseq_ST_st6_fsm_5, tmp_26_fu_431_p2, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and ((ap_const_lv1_0 = tmp_22_reg_669) or (ap_const_lv1_0 = tmp_26_fu_431_p2))) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6))) then 
            code_lengths_we0 <= ap_const_logic_1;
        else 
            code_lengths_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_372_p2 <= "1" when (i_reg_245 = ap_const_lv9_100) else "0";
    exitcond2_fu_394_p2 <= "1" when (i1_reg_256 = ap_const_lv9_100) else "0";
    exitcond_fu_454_p2 <= "1" when (i2_reg_279 = ap_const_lv9_100) else "0";
    exitcond_i_fu_615_p2 <= "1" when (i_i_phi_fu_353_p4 = ap_const_lv9_100) else "0";

    i4_phi_fu_341_p4_assign_proc : process(i4_reg_338, ap_sig_cseq_ST_pp3_stg0_fsm_11, ap_reg_ppiten_pp3_it1, icmp_reg_743, i_15_reg_778)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp3_stg0_fsm_11) and (ap_const_logic_1 = ap_reg_ppiten_pp3_it1) and not((icmp_reg_743 = ap_const_lv1_0)))) then 
            i4_phi_fu_341_p4 <= i_15_reg_778;
        else 
            i4_phi_fu_341_p4 <= i4_reg_338;
        end if; 
    end process;

    i_10_cast_fu_502_p1 <= std_logic_vector(resize(unsigned(i_14_reg_302),32));
    i_11_fu_485_p2 <= std_logic_vector(unsigned(index_first_code_reg_290) + unsigned(ap_const_lv9_1));
    i_15_fu_604_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(i4_reg_338));
    i_16_fu_621_p2 <= std_logic_vector(unsigned(i_i_phi_fu_353_p4) + unsigned(ap_const_lv9_1));
    i_7_fu_378_p2 <= std_logic_vector(unsigned(i_reg_245) + unsigned(ap_const_lv9_1));
    i_8_fu_460_p2 <= std_logic_vector(unsigned(i2_reg_279) + unsigned(ap_const_lv9_1));
    i_9_fu_443_p2 <= std_logic_vector(unsigned(i1_reg_256) + unsigned(ap_const_lv9_1));

    i_i_phi_fu_353_p4_assign_proc : process(i_i_reg_348, exitcond_i_reg_783, ap_sig_cseq_ST_pp4_stg0_fsm_13, ap_reg_ppiten_pp4_it1, i_16_reg_787)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp4_stg0_fsm_13) and (ap_const_logic_1 = ap_reg_ppiten_pp4_it1) and (ap_const_lv1_0 = exitcond_i_reg_783))) then 
            i_i_phi_fu_353_p4 <= i_16_reg_787;
        else 
            i_i_phi_fu_353_p4 <= i_i_reg_348;
        end if; 
    end process;

    icmp_fu_516_p2 <= "1" when (signed(tmp_39_fu_506_p4) < signed(ap_const_lv24_1)) else "0";
        j_0_in_cast_fu_406_p1 <= std_logic_vector(resize(signed(j_0_in_reg_268),32));

        j_cast_fu_416_p1 <= std_logic_vector(resize(signed(j_fu_410_p2),32));

    j_fu_410_p2 <= std_logic_vector(unsigned(j_0_in_reg_268) + unsigned(ap_const_lv9_1FF));
        length_1_in_cast_fu_595_p1 <= std_logic_vector(resize(signed(i4_reg_338),64));

    length_cast_fu_533_p1 <= std_logic_vector(resize(unsigned(length_reg_326),9));
    sel_tmp1_fu_576_p2 <= (tmp_33_reg_747 xor ap_const_lv1_1);
    sel_tmp2_fu_581_p2 <= (tmp_37_fu_541_p2 and sel_tmp1_fu_576_p2);
    sel_tmp_fu_569_p3 <= 
        ap_const_lv32_0 when (tmp_33_reg_747(0) = '1') else 
        code_2_fu_547_p2;
    tmp_21_fu_400_p1 <= std_logic_vector(resize(unsigned(i1_reg_256),64));
    tmp_22_fu_420_p2 <= "1" when (signed(j_0_in_reg_268) > signed(ap_const_lv9_0)) else "0";
    tmp_23_fu_466_p1 <= std_logic_vector(resize(unsigned(i2_reg_279),64));
    tmp_24_fu_472_p1 <= std_logic_vector(resize(unsigned(bytes_q0),64));
    tmp_25_fu_426_p1 <= std_logic_vector(resize(unsigned(j_cast_fu_416_p1),64));
    tmp_26_fu_431_p2 <= "1" when (unsigned(code_lengths_q0) > unsigned(reg_361)) else "0";
        tmp_27_fu_437_p1 <= std_logic_vector(resize(signed(j_0_in_reg_268),64));

    tmp_29_fu_449_p1 <= std_logic_vector(resize(unsigned(j_0_in_cast_reg_659),64));
    tmp_30_fu_491_p1 <= std_logic_vector(resize(unsigned(index_first_code_reg_290),64));
    tmp_31_fu_496_p2 <= "1" when (code_lengths_q0 = ap_const_lv8_0) else "0";
    tmp_32_fu_477_p3 <= index_first_code_reg_290(8 downto 8);
    tmp_33_fu_522_p2 <= "1" when (i4_phi_fu_341_p4 = i_10_cast_reg_737) else "0";
        tmp_35_fu_527_p1 <= std_logic_vector(resize(signed(i4_phi_fu_341_p4),64));

    tmp_36_cast9_fu_537_p1 <= std_logic_vector(resize(unsigned(code_lengths_q0),9));
    tmp_37_fu_541_p2 <= "1" when (unsigned(code_lengths_q0) > unsigned(length_reg_326)) else "0";
        tmp_38_cast_fu_559_p1 <= std_logic_vector(resize(signed(tmp_38_fu_553_p2),32));

    tmp_38_fu_553_p2 <= std_logic_vector(unsigned(tmp_36_cast9_fu_537_p1) - unsigned(length_cast_fu_533_p1));
    tmp_39_fu_506_p4 <= i4_phi_fu_341_p4(31 downto 8);
    tmp_40_fu_610_p1 <= std_logic_vector(resize(unsigned(reg_367),64));
    tmp_42_fu_600_p1 <= val_assign_1_fu_587_p3(16 - 1 downto 0);
    tmp_fu_384_p1 <= i_reg_245(8 - 1 downto 0);
    tmp_i_29_fu_632_p1 <= std_logic_vector(resize(unsigned(HuffmanTree_HuffmanCodes_V_q0),64));
    tmp_i_fu_627_p1 <= std_logic_vector(resize(unsigned(i_i_phi_fu_353_p4),64));
    tmp_s_fu_389_p1 <= std_logic_vector(resize(unsigned(i_reg_245),64));
    val_assign_1_fu_587_p3 <= 
        code_3_fu_563_p2 when (sel_tmp2_fu_581_p2(0) = '1') else 
        sel_tmp_fu_569_p3;
end behav;
